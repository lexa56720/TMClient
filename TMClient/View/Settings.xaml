<Page x:Class="TMClient.View.Settings"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:controls="clr-namespace:TMClient.Controls"
      xmlns:local="clr-namespace:TMClient.View" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      mc:Ignorable="d" Margin="0" Background="{StaticResource BackgroundDarkBrush}"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Настройки">

    <Page.Resources>
        <Storyboard x:Key="Success" TargetProperty="Background.(SolidColorBrush.Color)" TargetName="SettingsGrid">
            <ColorAnimation 
                    To="#224CAF50"  
                    AutoReverse="True" 
                    Duration="0:0:0.4"/>
        </Storyboard>
    </Page.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding PageLoaded}" />
        </i:EventTrigger>

        <i:DataTrigger Binding="{Binding SuccessSave, Mode=OneWay}" Value="True">
            <i:ControlStoryboardAction Storyboard="{StaticResource Success}"     
                               ControlStoryboardOption="Play"/>
        </i:DataTrigger>

    </i:Interaction.Triggers>

    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>


        <Label Content="Настройки:" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" FontSize="28" />


        <Border x:Name="SettingsGrid" CornerRadius="5" Grid.Row="1" Background="#202020"  Grid.Column="0" Grid.ColumnSpan="3" Margin="0,0,0,5">

            <ScrollViewer>
                <StackPanel>
                    <StackPanel>
                        <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" Text="Адрес сервера:" FontSize="16" />
                        <TextBox Grid.Row="1" Grid.Column="2" FontSize="24"  x:Name="Ip">
                            <TextBox.Text>
                                <Binding Path="ServerAddress" NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <StackPanel>
                        <TextBlock  VerticalAlignment="Center" TextWrapping="Wrap" Text="Порт:" FontSize="16" />
                        <TextBox  FontSize="24"  x:Name="Info">
                            <TextBox.Text>
                                <Binding Path="InfoPort" NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <StackPanel>
                        <TextBlock   VerticalAlignment="Center" TextWrapping="Wrap" Text="Время жизни кэша пользователей (мин):" FontSize="16" />
                        <TextBox  FontSize="24"  x:Name="UserCache">
                            <TextBox.Text>
                                <Binding Path="CachedUserLifeTime" NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <StackPanel>
                        <TextBlock  VerticalAlignment="Center" TextWrapping="Wrap"  Text="Время жизни кэша чатов (мин):" FontSize="16" />
                        <TextBox  FontSize="24"  x:Name="ChatCache" >
                            <TextBox.Text>
                                <Binding Path="CachedChatLifeTime" NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock  VerticalAlignment="Center" TextWrapping="Wrap"  Text="Сохранять данные авторизации для автоматического входа:" FontSize="16" />
                        <ToggleButton IsChecked="{Binding IsSaveAuth}" HorizontalAlignment="Right"/>
                    </StackPanel>

                </StackPanel>
            </ScrollViewer>
        </Border>
        
        <controls:IconButton Icon="&#xE74e;" HorizontalContentAlignment="Center"  Command="{Binding SaveCommand}"
                             Grid.Row="3" Grid.Column="1"  Margin="100,0,100,0" FontSize="28" Text="Сохранить">
            <controls:IconButton.Style>
                <Style TargetType="controls:IconButton" BasedOn="{StaticResource ResourceKey=AcceptButton}">
                    <Style.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError),ElementName=Ip}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError),ElementName=Info}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError),ElementName=UserCache}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError),ElementName=ChatCache}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding Path=(Validation.HasError),ElementName=Ip}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=(Validation.HasError),ElementName=Info}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=(Validation.HasError),ElementName=UserCache}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=(Validation.HasError),ElementName=ChatCache}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </controls:IconButton.Style>
        </controls:IconButton>
    </Grid>
</Page>
