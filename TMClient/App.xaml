<Application x:Class="TMClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TMClient"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:u="clr-namespace:TMClient.Utils"
             xmlns:c="clr-namespace:TMClient.Utils.Converters"
             xmlns:v="clr-namespace:TMClient.Utils.Validations"
             xmlns:controls="clr-namespace:TMClient.Controls"
             Startup="ApplicationStart"
             Exit="ApplicationExit">
    <Application.Resources>
        
        <c:LoginConverter x:Key="LoginConverter"></c:LoginConverter>
        <c:SubLoginConverter x:Key="SubLoginConverter"></c:SubLoginConverter>
        <c:DateTimeConverter x:Key="DateTimeConverter"></c:DateTimeConverter>
        <c:BooleanInverter x:Key="BooleanInverter"></c:BooleanInverter>
        <c:WidthToRadiusConverter x:Key="WidthToRadiusConverter"></c:WidthToRadiusConverter>
        <c:AddValueConverter x:Key="AddValueConverter"></c:AddValueConverter>
        <c:FirstCharConverter x:Key="FirstCharConverter"></c:FirstCharConverter>
        <c:NullImageConverter x:Key="NullImageConverter"></c:NullImageConverter>
        <c:EntityImageSizeConverter x:Key="EntityImageSizeConverter"></c:EntityImageSizeConverter>
        
        <v:NameRule x:Key="NameRule"></v:NameRule>
        <v:ChatNameRule x:Key="ChatNameRule"></v:ChatNameRule>
        <v:LoginRule x:Key="LoginRule"></v:LoginRule>
        <v:MessageRule x:Key="MessageRule"></v:MessageRule>

        <Color x:Key="OwnMessageColor">#3498DB</Color>
        <SolidColorBrush x:Key="OwnMessageBrush" Color="{StaticResource OwnMessageColor}"/>

        <Color x:Key="UnreadMessageColor">#2C3E50</Color>
        <SolidColorBrush x:Key="UnreadMessageBrush" Color="{StaticResource UnreadMessageColor}"/>

        <Color x:Key="UserMessageColor">#424242</Color>
        <SolidColorBrush x:Key="UserMessageBrush" Color="{StaticResource UserMessageColor}"/>

        <Color x:Key="ActiveHighlightColor">#0078D7</Color>
        <SolidColorBrush x:Key="ActiveHighlightBrush" Color="{StaticResource ActiveHighlightColor}"/>

        <Color x:Key="ActiveColor">#0063B1</Color>
        <SolidColorBrush x:Key="ActiveBrush" Color="{StaticResource ActiveColor}" />

        <Color x:Key="ActiveClickColor">#0D47A1</Color>
        <SolidColorBrush x:Key="ActiveClickBrush" Color="{StaticResource ActiveClickColor}" />

        <Color x:Key="InteractColor">#242424</Color>
        <SolidColorBrush x:Key="InteractBrush" Color="{StaticResource InteractColor}"/>

        <Color x:Key="BackgroundDarkColor">#262626</Color>
        <SolidColorBrush x:Key="BackgroundDarkBrush" Color="{StaticResource BackgroundDarkColor}"/>

        <Color x:Key="BackgroundColor">#282828</Color>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>

        <Color x:Key="BackgroundLightColor">#303030</Color>
        <SolidColorBrush x:Key="BackgroundLightBrush" Color="{StaticResource BackgroundLightColor}"/>

        <Color x:Key="InteractiveColor">#323232</Color>
        <SolidColorBrush x:Key="InteractiveBrush" Color="{StaticResource InteractiveColor}"/>

        <Color x:Key="InteractiveHighlightColor">#383838</Color>
        <SolidColorBrush x:Key="InteractiveHighlightBrush" Color="{StaticResource InteractiveHighlightColor}"/>


        <Color x:Key="ForegroundColor">#F5F5F5</Color>
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}"/>

        <Color x:Key="LightInteractColor">#545454</Color>
        <SolidColorBrush x:Key="LightInteractBrush" Color="{StaticResource LightInteractColor}"/>


        <Color x:Key="RedColor">#F44336</Color>
        <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}"/>

        <Color x:Key="GreenColor">#4CAF50</Color>
        <SolidColorBrush x:Key="GreenBrush" Color="{StaticResource GreenColor}"/>


        <Color x:Key="OrangeColor">#4CAF50</Color>
        <SolidColorBrush x:Key="OrangeBrush" Color="{StaticResource OrangeColor}"/>

        <Color x:Key="TransperentGreenColor">#004CAF50</Color>

        
        <FontFamily x:Key="SegoeIcons">./Resources/Fonts/#Segoe Fluent Icons</FontFamily>
        <FontFamily x:Key="SegoeUI">./Resources/Fonts/#{StaticResource SegoeUI}</FontFamily>

        <Storyboard x:Key="MouseOverStart">
            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="{StaticResource ActiveHighlightColor}"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard  x:Key="MouseOverEnd">
            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="{StaticResource ActiveColor}"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.3"/>
        </Storyboard>

        <Style TargetType="ToolTip">
            <Setter Property="FontFamily" Value="{StaticResource SegoeUI}"/>
            <Setter Property="Background" Value="{StaticResource LightInteractBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="Padding" Value="5" />
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Background="Transparent" Width="44" Height="30">
                            <Border  x:Name="LayoutRoot" CornerRadius="5" Background="#00F44336">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="{StaticResource SegoeIcons}" FontSize="10" 
                                   Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                    To="{StaticResource RedColor}"
                                                    AutoReverse="False"
                                                    FillBehavior="HoldEnd" 
                                                    Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                To="#00383838"
                                                AutoReverse="False"
                                                FillBehavior="HoldEnd" 
                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CaptionButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Background="Transparent" Width="44" Height="30">
                            <Border  x:Name="LayoutRoot" CornerRadius="5" Background="#00383838">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="{StaticResource SegoeIcons}" FontSize="10" 
                                   Foreground="{StaticResource ForegroundBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                    To="{StaticResource InteractiveHighlightColor}"
                                                    AutoReverse="False"
                                                    FillBehavior="HoldEnd" 
                                                    Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                To="#00383838"
                                                AutoReverse="False"
                                                FillBehavior="HoldEnd" 
                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultButton" TargetType="Button">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
            <Setter Property="Control.FontSize" Value="20" />
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Control.Background" Value="{StaticResource ActiveBrush}" />
            <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Control.Margin" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseOverStart}"/>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource MouseOverEnd}"/>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="{StaticResource ActiveClickColor}"
                                    AutoReverse="True"
                                    FillBehavior="Stop" 
                                    Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource ResourceKey=DefaultButton}">

        </Style>
        <Style TargetType="controls:IconButton" BasedOn="{StaticResource ResourceKey=DefaultButton}">

        </Style>

        <Style x:Key="CircleButton" TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid  x:Name="LayoutRoot" Opacity="0"  Background="Transparent" >
                            <Ellipse Fill="Black" StrokeThickness="2"  x:Name="circle" Margin="-1"
                                     Width="{Binding Width,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource AddValueConverter},ConverterParameter=2}"
                                     Height="{Binding Height,RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource AddValueConverter},ConverterParameter=2}">
                                <Ellipse.Stroke>
                                    <SolidColorBrush Color="Black" Opacity="0.4" />

                                </Ellipse.Stroke>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Opacity" 
                                                                To="0.7"
                                                                AutoReverse="False"
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>

                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="LayoutRoot"  Storyboard.TargetProperty="Opacity" 
                                                                To="0"
                                                                AutoReverse="False"
                                                                FillBehavior="HoldEnd" 
                                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="circle" Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)" 
                                                         To="{StaticResource LightInteractColor}"
                                                         AutoReverse="True"
                                                         FillBehavior="Stop" 
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransperentButton" BasedOn="{StaticResource ResourceKey=DefaultButton}" TargetType="Button">
            <Setter Property="Background" Value="#00383838" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#80383838"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#00383838"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                            To="#80545454"
                            AutoReverse="True"
                            FillBehavior="Stop" 
                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="AcceptButton" BasedOn="{StaticResource ResourceKey=DefaultButton}" TargetType="Button">
            <Setter Property="Control.Background" Value="#4CAF50" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#66BB6A"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#4CAF50"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                            To="#2E7D32"
                            AutoReverse="True"
                            FillBehavior="Stop" 
                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OrangeButton" BasedOn="{StaticResource ResourceKey=DefaultButton}" TargetType="Button">
            <Setter Property="Control.Background" Value="#E67E22" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#F39C12"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                    To="#E67E22"
                                    AutoReverse="False"
                                    FillBehavior="HoldEnd" 
                                    Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                            To="#D35400"
                            AutoReverse="True"
                            FillBehavior="Stop" 
                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DeclineButton" BasedOn="{StaticResource ResourceKey=DefaultButton}" TargetType="Button">
            <Setter Property="Control.Background" Value="#F44336" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                            To="#EF5350"
                            AutoReverse="False"
                            FillBehavior="HoldEnd" 
                            Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard >
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                            To="#F44336"
                            AutoReverse="False"
                            FillBehavior="HoldEnd" 
                            Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                    To="#C62828"
                    AutoReverse="True"
                    FillBehavior="Stop" 
                    Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Grid">

            <Setter Property="Control.Background" Value="Transparent" />

            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="0" />
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="GridSplitter">
            <Setter Property="Background" Value="{StaticResource LightInteractBrush}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Opacity" Value="0.2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridSplitter">
                        <Border CornerRadius="2" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Padding" Value="5" />
        </Style>

        <Style x:Key="DefaultTextBox" TargetType="TextBox">
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource InteractiveBrush}" />
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="{StaticResource RedBrush}" CornerRadius="5" BorderThickness="2">
                                <AdornedElementPlaceholder Name="adornerPlaceholder"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" 
                         Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="Background">
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                         To="{StaticResource InteractColor}"
                                         AutoReverse="False"
                                         FillBehavior="HoldEnd" 
                                         Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="Background">
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                          To="{StaticResource InteractiveColor}"
                                          AutoReverse="False"
                                          FillBehavior="HoldEnd" 
                                          Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox"  BasedOn="{StaticResource ResourceKey=DefaultTextBox}"/>

        <Style x:Key="DarkTextBox" TargetType="TextBox">
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#181818" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="Background">
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                         To="#141414"
                                         AutoReverse="False"
                                         FillBehavior="HoldEnd" 
                                         Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard TargetProperty="Background">
                                <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                          To="#181818"
                                          AutoReverse="False"
                                          FillBehavior="HoldEnd" 
                                          Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Control.FontFamily" Value="{StaticResource SegoeUI}" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Background" Value="#323232" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Background">
                                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                To="{StaticResource InteractColor}"
                                                AutoReverse="False"
                                                FillBehavior="HoldEnd" 
                                                Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Background">
                                            <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                                                 To="{StaticResource InteractiveColor}"
                                                 AutoReverse="False"
                                                 FillBehavior="HoldEnd" 
                                                 Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Frame">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="BorderThickness" Value="0"  />
            <Setter Property="Padding" Value="0"/>
            <Setter Property="NavigationUIVisibility" Value="Hidden"/>
        </Style>

        <Style TargetType="StackPanel">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0"  />
        </Style>

        <Style TargetType="Border">
            <Setter Property="CornerRadius" Value="5" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        </Style>
        <Style TargetType="controls:ModernWindow">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        </Style>

        <!--#region ScrollBar -->

        <SolidColorBrush x:Key="StandardBorderBrush" Color="SeaGreen" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="NavajoWhite" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#404040" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="AliceBlue" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#484848" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="5" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Red" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="BorderX"  CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0"  Width="{TemplateBinding Width}" Margin="0,0,-10,0" >
                            <Border.Resources>
                                <Style TargetType="Border" >
                                    <Style.Triggers>
                                        <Trigger  Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Resources>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.0001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="5" Background="#222222" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand"  />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true"  >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb >
                        <Thumb Style="{StaticResource ScrollBarThumb}" Width="18" Margin="-5,0,0,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="0"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="10"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="5" Background="#222222"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"  Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <ScrollContentPresenter Grid.Column="0" Margin="2,5,5,5"  />
                            <ScrollBar x:Name="PART_VerticalScrollBar"  Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Rectangle Grid.Row="1" Grid.Column="1" Fill="Red"/>


                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region ComboBox -->

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="5"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0" />

                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#4a4a4a" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="Red"
                            Foreground="Green"
                            Visibility="Hidden"                                   
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="Transparent"
                                CornerRadius="5"
                                BorderThickness="0"
                                BorderBrush="#888888"/>
                                    <Border CornerRadius="20" Background="#242424" Padding="0" Margin="-2,-5,0,-5" BorderThickness="0">
                                        <ScrollViewer Background="#262626" Margin="0" SnapsToDevicePixels="True">


                                            <StackPanel Background="Transparent"   IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>

                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              CornerRadius="5"
                              SnapsToDevicePixels="true"
                               Background="Transparent">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#242424"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region LISTVIEW-->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="{StaticResource BackgroundDarkBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border"
                BorderThickness="1" Background="{Binding Background,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
               </Setter>
        </Style>
        <Style TargetType="ListViewItem">
            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <!-- Trun off default selection-->
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderThickness="0"
                            Margin="3,0,0,0"
                            Background="{TemplateBinding Background}" 
                            Padding="0" 
                            SnapsToDevicePixels="true" >
                            <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource InteractiveBrush}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="{StaticResource InteractiveHighlightBrush}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!--#region TreeView-->
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border 
                              Name="Border" 
                              CornerRadius="5" 
                              BorderThickness="1" >
                            <ScrollViewer 
            Focusable="False"
            CanContentScroll="False"
            Padding="4">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#363636" />
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#303030" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
            </Style.Resources>
        </Style>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="BorderThickness" Value="0" />

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Red" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Red" />
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Red" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

    </Application.Resources>
</Application>
